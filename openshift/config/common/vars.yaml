# Component Versions
babylon_anarchy_version: v0.23.1
babylon_anarchy_governor_version: v0.20.0
poolboy_version: v1.7.1
replik8s_version: v0.5.0
user_namespace_operator_version: v0.3.1

babylon_anarchy_governor_repository: https://github.com/rhpds/babylon_anarchy_governor.git
babylon_anarchy_governor_role:
  name: babylon_anarchy_governor
  src: "{{ babylon_anarchy_governor_repository }}"
  version: "{{ babylon_anarchy_governor_version }}"

babylon_anarchy_roles: >-
  {{ babylon_anarchy_governor_pre_roles | default([])
   + [babylon_anarchy_governor_role]
   + babylon_anarchy_governor_post_roles | default([])
  }}

# Variables defaults for a variables without the "default_" prefix
default_babylon_anarchy_namespaces:
- name: anarchy-operator
  commune:
    replicaCount: 1
    runners:
    - name: default
      consecutiveFailureLimit: 5
      maxReplicas: 10
      minReplicas: 1
      resources:
        limits:
          cpu: "1"
          memory: "512Mi"
        requests:
          cpu: "500m"
          memory: "256Mi"
      runLimit: 500
      scaleUpDelay: 5m
      scaleUpThreshold: 10
      scalingCheckInterval: 1m

babylon_resources:
  # Anarchy install and anarchy-operator deployment
  - name: Anarchy install
    template:
      file: anarchy-install.yaml.j2
  - name: Verify anarchycommunes.anarchy.gpte.redhat.com CRD
    info:
      api_version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: anarchycommunes.anarchy.gpte.redhat.com
    register: r_anarchycommunes_crd
    until: r_anarchycommunes_crd.resources | length > 0
    delay: 10
    retries: 30

  # Poolboy
  - name: Poolboy install
    helm_template:
      git:
        repo: https://github.com/redhat-cop/poolboy.git
        version: "{{ poolboy_version }}"
      dir: helm
      values:
        admin:
          deploy: false
        namespace:
          name: poolboy

  # Babylon configuration
  - name: Babylon Helm Template
    helm_template:
      dir: babylon-config
      include_crds: true
      values:
        anarchy:
          namespaces: "{{ babylon_anarchy_namespaces | default(default_babylon_anarchy_namespaces) }}"
          secrets: "{{ babylon_anarchy_secrets | default([]) }}"
        babylonTower: "{{ babylon_tower }}"
        catalogNamespaces: "{{ babylon_catalog_namespaces | default(default_babylon_catalog_namespaces) }}"
        # Sets up cross-cluster backup service accounts and restore job
        crossClusterBackup: >-
          {{ {
            "enable": babylon_cross_cluster_backup_enable | default(false) | bool,
            "replik8sVersion": replik8s_version,
          } }}

  - name: AgnosticV Operator Deploy
    helm_template:
      dir: babylon-agnosticv-operator
      include_crds: true
      values:
        # Set agnosticv repos, passing ssh_key value as sshKey
        agnosticvRepos: "{{ babylon_agnosticv_repositories | default([]) }}"
        anarchy:
          roles: "{{ babylon_anarchy_roles }}"

  - name: Babylon cost-tracker Helm Template
    when: >-
      babylon_cost_tracker_deploy | default(false) | bool
    helm_template:
      dir: babylon-cost-tracker
      values:
        awsSandboxManagerCredentials: "{{ aws_sandbox_manager_credentials | default({}) }}"

  - namespace: babylon-cross-cluster-backup
    resources:
    - name: Babylon cross-cluster-backup replik8s
      when: >-
        babylon_cross_cluster_backup_enable | default(false) | bool
      helm_template:
        dir: helm
        git:
          repo: https://github.com/rhpds/replik8s.git
          version: "{{ replik8s_version }}"
        values:
          kubeConfigs:
            babylon: "{{ babylon_cross_cluster_backup_kubeconfig | default('') }}"
          configs:
            babylon:
              kubeConfig:
                secret: babylon
              resources:
              - apiVersion: anarchy.gpte.redhat.com/v1
                kind: AnarchySubject
              - apiVersion: anarchy.gpte.redhat.com/v1
                kind: AnarchyAction
              - apiVersion: anarchy.gpte.redhat.com/v1
                kind: AnarchyRun
              - apiVersion: babylon.gpte.redhat.com/v1
                kind: Workshop
              - apiVersion: babylon.gpte.redhat.com/v1
                kind: WorkshopProvision
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourceClaim
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourceHandle
                namespace: poolboy
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourcePool
                namespace: poolboy
          envVars:
            RECOVERY_POINT_INTERVAL: "{{ babylon_cross_cluster_backup_recovery_point_interval | default(60 * 60) }}"
            RECOVERY_POINT_MAX_AGE: "{{ babylon_cross_cluster_backup_recovery_point_max_age | default(48 * 60 * 60) }}"
            REFRESH_INTERVAL: "{{ babylon_cross_cluster_backup_recovery_point_max_age | default(30 * 60) }}"
            SOURCE_CLEANUP_INTERVAL: "{{ babylon_cross_cluster_backup_recovery_point_max_age | default(6 * 60 * 60) }}"
          persistentVolume:
            spec:
              resources:
                requests:
                  storage: "{{ babylon_cross_cluster_backup_storage_size | default('50Gi') }}"

  - name: Babylon catalog Helm Template
    when: >-
      babylon_catalog_deploy | default(false) | bool
    helm_template:
      dir: babylon-catalog
      values:
        api:
          replicaCount: "{{ babylon_catalog_api_replica_count | default(1) }}"
        interfaceName: "{{ babylon_catalog_interface | default('rhpds') }}"
        oauthProxy:
          clientId: "{{ babylon_catalog_oauth_client_id | default('') }}"
          clientSecret: "{{ babylon_catalog_oauth_client_secret | default('') }}"
          cookieSecret: "{{ babylon_catalog_oauth_cookie_secret | default('') }}"
        redis: "{{ babylon_catalog_redis | default({}) }}"
        route: "{{ babylon_catalog_route | default({}) }}"
        salesforce: "{{ babylon_salesforce | default({}) }}"

  - name: Babylon admin Helm Template
    when: >-
      babylon_reporting_db is defined and
      babylon_admin_deploy | default(true) | bool
    helm_template:
      dir: babylon-admin
      values:
        db:
          name: "{{ babylon_reporting_db.dbname | default('') }}"
          username: "{{ babylon_reporting_db.username | default('') }}"
          password: "{{ babylon_reporting_db.password | default('') }}"
          hostname: "{{ babylon_reporting_db.hostname | default('') }}"

  - name: Babylon lab-ui-manager Helm Template
    when: >-
      babylon_lab_ui_manager_deploy | default(true) | bool
    helm_template:
      dir: babylon-lab-ui-manager
      include_crds: true

  - name: Babylon notifier Helm Template
    when: >-
      babylon_notifier_deploy | default(false) | bool
    helm_template:
      dir: babylon-notifier
      values:
        anarchy:
          namespaces: "{{ babylon_anarchy_namespaces | default(default_babylon_anarchy_namespaces) }}"
        redis: "{{ babylon_notifier_redis | default({}) }}"
        smtp: "{{ babylon_notifier_smtp | default({}) }}"

  - name: Babylon workshop-manager Helm Template
    when: >-
      babylon_workshop_manager_deploy | default(true) | bool
    helm_template:
      dir: babylon-workshop-manager
  
  - name: Babylon catalog-manager Helm Template
    when: >-
      babylon_reporting_db is defined and
      babylon_catalog_manager_deploy | default(true) | bool
    helm_template:
      dir: babylon-catalog-manager
      values:
        db:
          name: "{{ babylon_reporting_db.dbname | default('') }}"
          username: "{{ babylon_reporting_db.username | default('') }}"
          password: "{{ babylon_reporting_db.password | default('') }}"
          hostname: "{{ babylon_reporting_db.hostname | default('') }}"

  - name: Babylon ratings Helm Template
    when: >-
      babylon_reporting_db is defined and
      babylon_ratings_deploy | default(true) | bool
    helm_template:
      dir: babylon-ratings
      values:
        db:
          name: "{{ babylon_reporting_db.dbname | default('') }}"
          username: "{{ babylon_reporting_db.username | default('') }}"
          password: "{{ babylon_reporting_db.password | default('') }}"
          hostname: "{{ babylon_reporting_db.hostname | default('') }}"

# Cluster level resources
k8s_resources: "{{ babylon_resources }}"
