# Component Versions
agnosticv_operator_version: v0.15.5
babylon_anarchy_version: v0.16.25
babylon_anarchy_governor_version: v0.9.4
poolboy_version: v0.10.8
replik8s_version: v0.3.5
user_namespace_operator_version: v0.3.1

babylon_anarchy_governor_repository: https://github.com/redhat-gpte-devopsautomation/babylon_anarchy_governor.git
babylon_anarchy_governor_role:
  name: babylon_anarchy_governor
  src: "{{ babylon_anarchy_governor_repository }}"
  version: "{{ babylon_anarchy_governor_version }}"

babylon_anarchy_roles: >-
  {{ babylon_anarchy_governor_pre_roles | default([])
   + [babylon_anarchy_governor_role]
   + babylon_anarchy_governor_post_roles | default([])
  }}

# Variables defaults for a variables without the "default_" prefix
default_babylon_admin_image: "quay.io/redhat-cop/babylon-admin:v0.2.2"
default_babylon_admin_image: "quay.io/redhat-cop/babylon-admin:v0.2.2"
default_babylon_anarchy_namespaces:
- name: anarchy-operator
  commune:
    replicaCount: 1
    runners:
    - name: default
      minReplicas: 1
      resources:
        limits:
          cpu: "1"
          memory: "512Mi"
        requests:
          cpu: "500m"
          memory: "256Mi"

babylon_resources:
  # Anarchy install and anarchy-operator deployment
  - name: Anarchy install
    template:
      file: anarchy-install.yaml.j2
  - name: Verify anarchycommunes.anarchy.gpte.redhat.com CRD
    info:
      api_version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: anarchycommunes.anarchy.gpte.redhat.com
    register: r_anarchycommunes_crd
    until: r_anarchycommunes_crd.resources | length > 0
    delay: 10
    retries: 30

  # Poolboy
  - name: Poolboy install
    helm_template:
      git:
        repo: https://github.com/redhat-cop/poolboy.git
        version: "{{ poolboy_version }}"
      dir: helm
      values:
        admin:
          deploy: false
        namespace:
          name: poolboy

  # Babylon configuration
  - name: Babylon Helm Template
    helm_template:
      dir: babylon-config
      include_crds: true
      values:
        admin:
          image: "{{ babylon_admin_image | default(default_babylon_admin_image) }}"
          redisPassword: "{{ babylon_admin_redis_password | default('generate') }}"
        anarchy:
          namespaces: "{{ babylon_anarchy_namespaces | default(default_babylon_anarchy_namespaces) }}"
          secrets: "{{ babylon_anarchy_secrets | default([]) }}"
        babylonTower: "{{ babylon_tower }}"

        # Evaluation to preserve boolean type
        catalogNamespaces: "{{ babylon_catalog_namespaces | default(default_babylon_catalog_namespaces) }}"
        crossClusterBackup: "{{ babylon_cross_cluster_backup | default({}) }}"

  - namespace: babylon-cross-cluster-backup
    resources:
    - name: Babylon cross-cluster-backup replik8s
      when: >-
        babylon_cross_cluster_backup.enable | default(false) | bool
      helm_template:
        dir: helm
        git:
          repo: https://github.com/redhat-gpte/replik8s.git
          version: "{{ replik8s_version }}"
        values:
          kubeConfigs:
            babylon: "{{ babylon_cross_cluster_backup.kubeconfig | default('') }}"
          configs:
            babylon:
              kubeConfig:
                secret: babylon
              resources:
              - apiVersion: anarchy.gpte.redhat.com/v1
                kind: AnarchySubject
              - apiVersion: anarchy.gpte.redhat.com/v1
                kind: AnarchyAction
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourceClaim
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourceHandle
                namespace: poolboy
              - apiVersion: poolboy.gpte.redhat.com/v1
                kind: ResourcePool
                namespace: poolboy
          envVars:
            # Configure hourly recovery points
            RECOVERY_POINT_INTERVAL: "{{ babylon_cross_cluster_backup_recovery_point_interval | default(3600) }}"
          persistentVolume:
            spec:
              resources:
                requests:
                  storage: "{{ babylon_cross_cluster_backup.storageSize | default('10Gi') }}"

  - name: Babylon catalog Helm Template
    when: >-
      babylon_catalog_deploy | default(false) | bool
    helm_template:
      dir: babylon-catalog
      values:
        api:
          replicaCount: "{{ babylon_catalog_api_replica_count | default(1) }}"
        interfaceName: "{{ babylon_catalog_interface | default('rhpds') }}"
        redis: "{{ babylon_catalog_redis | default({}) }}"
        route: "{{ babylon_catalog_route | default({}) }}"

  - name: Babylon lab-ui-manager Helm Template
    when: >-
      babylon_lab_ui_manager_deploy | default(true) | bool
    helm_template:
      dir: babylon-lab-ui-manager

  - name: Babylon notifier Helm Template
    when: >-
      babylon_notifier_deploy | default(false) | bool
    helm_template:
      dir: babylon-notifier
      values:
        anarchy:
          namespaces: "{{ babylon_anarchy_namespaces | default(default_babylon_anarchy_namespaces) }}"
        redis: "{{ babylon_notifier_redis | default({}) }}"
        smtp: "{{ babylon_notifier_smtp | default({}) }}"

  # agnosticv-operator
  - name: AgnosticV Operator Deploy
    helm_template:
      git:
        repo: https://github.com/redhat-gpte-devopsautomation/agnosticv-operator.git
        version: "{{ agnosticv_operator_version }}"
      dir: helm
      include_crds: true
      values:
        # Set agnosticv repos, passing ssh_key value as sshKey
        agnosticvRepos: "{{ babylon_agnosticv_repositories | default([]) }}"
        babylonAnarchyRoles: "{{ babylon_anarchy_roles }}"

# Cluster level resources
k8s_resources: "{{ babylon_resources }}"
