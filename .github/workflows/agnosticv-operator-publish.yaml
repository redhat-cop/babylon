---
name: agnosticv-operator-publish
on:
  push:
    branches-ignore:
    - '*'
    tags:
    - 'agnosticv-operator-v*'
jobs:
  publish:
    env:
      IMAGE_NAME: babylon-agnosticv-operator
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Get image tags
      id: image_tags
      run: |
        # Version is a semantic version tag or semantic version with release number
        # GITHUB_REF will be of the form "refs/tags/agnosticv-operator-v1.0.0" or "refs/tags/agnosticv-operator-v1.0.0-1"
        # To determine RELEASE, strip off the leading "refs/tags/"
        RELEASE=${GITHUB_REF#refs/tags/agnosticv-operator-}
        # To determine VERSION, strip off any release number suffix
        VERSION=${RELEASE/-*/}

        # Only build image if version tag without release number
        # Releases indicate a change in the repository that should not trigger a new build.
        if [[ "${VERSION}" == "${RELEASE}" ]]; then
          # Publish to latest, minor, and patch tags
          # Ex: latest,v1.2,v1.2.3
          echo "IMAGE_TAGS=latest ${VERSION%.*} ${VERSION}" >> $GITHUB_OUTPUT
        fi

    - name: Buildah Action
      id: buildah-build
      if: steps.image_tags.outputs.IMAGE_TAGS
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}
        tags: ${{ steps.image_tags.outputs.IMAGE_TAGS }}
        context: agnosticv-operator
        containerfiles: agnosticv-operator/Containerfile

    - name: Push image to registry
      id: push-to-registry
      if: steps.image_tags.outputs.IMAGE_TAGS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.buildah-build.outputs.image }}
        tags: ${{ steps.buildah-build.outputs.tags }}
        registry: ${{ vars.BABYLON_IMAGE_REGISTRY }}/${{ vars.BABYLON_IMAGE_REPOSITORY }}
        username: ${{ secrets.BABYLON_IMAGE_REGISTRY_USERNAME }}
        password: ${{ secrets.BABYLON_IMAGE_REGISTRY_PASSWORD }}
