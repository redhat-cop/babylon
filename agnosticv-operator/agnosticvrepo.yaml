---
apiVersion: gpte.redhat.com/v1
kind: AgnosticVRepo
metadata:
  name: agnosticv
spec:
  babylonAnarchyRoles:
  - name: babylon_agnostics
    src: https://github.com/redhat-cop/babylon_agnostics.git
    version: v0.0.3
  - name: babylon_aws_sandbox
    src: https://github.com/redhat-gpte-devopsautomation/babylon_aws_sandbox.git
    version: v0.1.3
  - name: babylon_anarchy_governor
    src: https://github.com/rhpds/babylon_anarchy_governor.git
    version: v0.19.1
  default_execution_environment:
    image: image-registry.apps-dev.open.redhat.com/agnosticd/ee-{{ merged_vars.__meta__.deployer.virtualenv
      | default('ansible2.9-python3.6-2021-11-30') }}
    private: true
  execution_environment_allow_list_extra:
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-.*?:v[0-9]+[.][0-9]+[.][0-9]+$
    pull: missing
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-.*?:(pr-[0-9]+|latest|dev|test)$
    pull: always
  - image: ^registry.redhat.io/ansible-automation-platform-21/ee-
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-ansible2.9-python3.6-2021-11-30$
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-equinix_metal-ansible2.9-python3.6-2021-07-02$
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-equinix_metal-ansible2.9-python3.6-2021-11-03$
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-azure_open_envs-ansible2.9-python3.6-2022-01-10$
  - image: ^image-registry.apps(-dev|-test)?.open.redhat.com/agnosticd/ee-ansible2.9-python3.6-2021-01-22$
  - image: ^quay.io/agnosticd/ee-
  - name: ^aap2-workshop$
  pollingInterval: 10s
  ref: master
  sshKey: agnosticv-sshkey
  url: git@github.com:rhpds/agnosticv.git
---
apiVersion: v1
kind: Secret
metadata:
  name: agnosticv-sshkey
type: Opaque
data:
  id_rsa: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFZRUFxdzM0VlYzMGVXekdyL1hkekpjalJGa0tGVXdLUVlRd015cm1PZ0xKWnBnalBaaG5VTzZiCndXNVRYc3dWUWJoTE9IUEtPZTZ2Z2JBNXNSeXpwTWM4QVhDTEZXWEllQUhhUXhPb3dQVWIycXFLY3lpTWJTT2wxeTJ4MTMKTmVuZndjZHlWdWU5ZkpkanVLZGxUZ2M1NE9CbUtxUmRMQi8zTXNUeGRKUGt2dUFUdHY3N1FXQ25YM0FqZGltaXlFcnE3dgpYbmk1THpYTHIvSldzM0Z3YW0zNVI1ZFQwN2lHSGIzQzRxZ0R2aVpzcEN2NlhvWXgwbUd3Q3JtbTh5Vzh5bzFMb0ZBclFBCkIrZE9OamZpVDZXUS8wcjNYcytMV3ppNVJVUGVjRGJUWVFPSnUzWTNYKzhaaXF5QWJwcHNoTFhmVkNXbHRUdG9zUEJiZXkKRG5OYW5rVDZzY3E3SjFHcWJTU0FZWFI0bjBUL2cvS1E3aDh5YllGNWZXaEtyb1dUdDNEbXFqQ0VKdUx6K3ZYNVZJZ2tRNApIUWpLQkpFdm1QOU52Qnk5OXd5eDkrdkdxOTFNNlJqR2ZIY3Bia2R1VGJucE5MRHhpZ2UxNlRKTVNaMWhCdEM1Y2dDMTZrCnVxQ09wMm5yQTduMzdUbExTcDZEMVM4eHhqUXBvQjRyV2JoMFhMOGhBQUFGbUtldEFkV25yUUhWQUFBQUIzTnphQzF5YzIKRUFBQUdCQUtzTitGVmQ5SGxzeHEvMTNjeVhJMFJaQ2hWTUNrR0VNRE1xNWpvQ3lXYVlJejJZWjFEdW04RnVVMTdNRlVHNApTemh6eWpudXI0R3dPYkVjczZUSFBBRndpeFZseUhnQjJrTVRxTUQxRzlxcWluTW9qRzBqcGRjdHNkZHpYcDM4SEhjbGJuCnZYeVhZN2luWlU0SE9lRGdaaXFrWFN3Zjl6TEU4WFNUNUw3Z0U3YisrMEZncDE5d0kzWXBvc2hLNnU3MTU0dVM4MXk2L3kKVnJOeGNHcHQrVWVYVTlPNGhoMjl3dUtvQTc0bWJLUXIrbDZHTWRKaHNBcTVwdk1sdk1xTlM2QlFLMEFBZm5UalkzNGsrbAprUDlLOTE3UGkxczR1VVZEM25BMjAyRURpYnQyTjEvdkdZcXNnRzZhYklTMTMxUWxwYlU3YUxEd1czc2c1eldwNUUrckhLCnV5ZFJxbTBrZ0dGMGVKOUUvNFB5a080Zk1tMkJlWDFvU3E2Rms3ZHc1cW93aENiaTgvcjErVlNJSkVPQjBJeWdTUkw1ai8KVGJ3Y3ZmY01zZmZyeHF2ZFRPa1l4bngzS1c1SGJrMjU2VFN3OFlvSHRla3lURW1kWVFiUXVYSUF0ZXBMcWdqcWRwNndPNQo5KzA1UzBxZWc5VXZNY1kwS2FBZUsxbTRkRnkvSVFBQUFBTUJBQUVBQUFHQURSbU55aVBlNUNtemNhaFhxeUpyL2dEL3A2Ci9pSFRCZGJKMjljZlhpckt1OER5eUx4UVB4QTdoS1JEbEc2M2lNc2k4VDdxbmI0UWU0ODFwcVc1VXlnRDI1T1JOSmJmOWUKVXNLL3FyOWF1YjFUeXd2dzdTN010WlQzU0xPNkxFa3hlT0p4K3FRRTlyd0tsNU5hZVNCQ25MU1RxN00vVGl2bzJjbkR2egpTYmJwYTV0TmJLMVZSQmJYY0dZeDVEcndrUXBlQ0M5aDJka3NUeFpONnNLRXB4eTh6SUM2L1cvWklaeWJmcVNYYXgzVVRNCjhNNUFKSWQ4cnVXVzVvb2VVampOME5QcnRQL2hEQmh4OTdqRnBpN3ZETDJRVWdwbEpuMGpMR2hEZ01vQTNyd05DbnBZYm8KcnUxTnh6Q3o0Q3l0N2tBMTgxMlI5bHRrWnpKN3E4QjFCOU0xYkdRU1NSOEt2NVVqR3JBc3dGV1hCR1QyblJ2L3ltMUxJZQpTUTg5bjhpdEgvS1ZXc0F5ZkNnMjJCVUphUXRQK2xkQThEczEyTlNsVVcwTXVZYmxBMUpUT1dwTTRZdk9waGFyM2ZPVDI1CmFFMEJFYnY2MGZPT2FLamFzRkJxWG1TNTc4ZktQKy9xRkZnUG5lZCtENEhpUEJxZkZXUm0wMWtobDQ3cjVuSFJjdEFBQUEKd0hhb2VzRnVoYTB5dkJwMFV0WmFhaVBVVWhWNllucW14SFJvWVhJVGVKMUhqVm9wV1BiWURTUXFLWEtOTHhHbVdWMVcyZQpzSXhWaGJFVzRMQkZWc1FMVTRITnNPTkJMSW5Kb2xjc1VXM08zZlFNQTlRZEI2RG0xeG9nUTJJTnV0Sk1Sc0JiS3owN01WCjI5cVQrVEVSTlRaN05ZdFAvZDlRKzZwUitIWHg1UDdDUkljVnFqNy9KUTFEaDExMlpHeTlUOUpBMXpNMnhsQkFDeE8wS2sKMUlIRitQQ2dnTTFzV0VrVXFDdFJZaXpFZU1xQWNNdW1jLzE1U3ZLRUczVTNXa0J3QUFBTUVBemc2TFB1V0JSTlA3VnFGOQovSnZqMUJ5Q1BpOXZ3ckxpb3JFRUpWajd5cy9nSEpLTVRQdkpQTUtRaEM2eGVtK1FlZi9wUGErVmFKb011Ti95b1lGd3QvCnpKMDRyK2dMeWVheFpYWUp3TFl5NTVHclNxVmFsbHlYZTNkSER3U2lNQ0ZhYVNmNW5KREsyWnFjcWJRMFdSN1BkSnFEZjIKQXR3TUJNY1k0YmYyQ0wxbDh1eURvNk43RXYyQzdQR21TTTJkR2x3MXpqRjE2d0tDcDl2TTU0MjhRTmV6bjFBSWE1SFVHQQpWaFcvdXJWM0JyOGtOMlVNZlJwc0NaZ2JsUG9la2ZBQUFBd1FEVWc1bUgxWGNZQXRzcUxlRGxoenQycnN4UzErcDZra3ltCmFQVDVpeFJLQzRJUjBvUzBkUWF2NEFZYzRtK3BaRENQOWIvVzVuTW5GRW90Vm1wSHQyeWE0aHhoZEdUMkp3RFFBdmlyejgKTUpYNUtkRm9RZjRlNHlGS011eUFzUi9PWlZhSGZ2aUk1cy8xVXlFTnFvWGFjTkRueGJmM0U5ZzQydTVqOW1QR2YrOGVzegprWE1QOUpkYm1yV2R4TTF0VVYxd09kbXRTT3J1c0d0VWUyTUFWZzRTL2hZMURFdno2V3pBWWRWZWFvKzVjbzI1M0Y1SVR4CjRENiswaVBwbzVENzhBQUFBZWFtdDFjR1psY21WQWFuUnJiR0Z3ZEc5d0xteHZZMkZzWkc5dFlXbHVBUUlEQkFVPQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K
