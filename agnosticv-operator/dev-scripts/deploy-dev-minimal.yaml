apiVersion: apps/v1
kind: Deployment
metadata:
  name: babylon-agnosticv-operator-webhook-dev
  namespace: babylon-config
  labels:
    app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
    spec:
      serviceAccountName: agnosticv-operator  # Use existing SA
      containers:
        - name: manager
          env:
            - name: AGNOSTICV_API_GROUP
              value: gpte.redhat.com
            - name: AGNOSTICV_VERSION
              value: v1
            - name: ANARCHY_API_GROUP
              value: anarchy.gpte.redhat.com
            - name: ANARCHY_VERSION
              value: v1
            - name: CATALOG_API_GROUP
              value: babylon.gpte.redhat.com
            - name: CATALOG_VERSION
              value: v1
            - name: EXECUTION_ENVIRONMENT_ALLOW_LIST
              value: |
                - image: ^registry.redhat.io/
                - image: ^registry.access.redhat.com/
                - name: ^Ansible Engine 2.9 execution environment$
                - name: ^Control Plane Execution Environment$
                - name: ^Default execution environment$
                - image: ^quay.io/agnosticd/ee-
            - name: POLLING_INTERVAL
              value: "5m"
            - name: RESOURCE_BROKER_API_GROUP
              value: poolboy.gpte.redhat.com
            - name: RESOURCE_BROKER_NAMESPACE
              value: poolboy
            - name: RESOURCE_BROKER_VERSION
              value: v1
            - name: WEBHOOK_ENABLED
              value: "true"
            - name: WEBHOOK_PORT
              value: "8090"
          image: "IMAGE_PLACEHOLDER"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: webhook
            timeoutSeconds: 10
          ports:
          - name: metrics
            containerPort: 8000
          - name: webhook
            containerPort: 8090
---
apiVersion: v1
kind: Service
metadata:
  name: babylon-agnosticv-operator-webhook-dev
  namespace: babylon-config
  labels:
    app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
spec:
  type: ClusterIP
  ports:
    - port: 8090
      targetPort: webhook
      protocol: TCP
      name: webhook
  selector:
    app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: babylon-agnosticv-operator-webhook-dev
  namespace: babylon-config
  labels:
    app.kubernetes.io/name: babylon-agnosticv-operator-webhook-dev
spec:
  to:
    kind: Service
    name: babylon-agnosticv-operator-webhook-dev
    weight: 100
  port:
    targetPort: webhook
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
