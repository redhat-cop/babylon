{{- range $namespace, $_interface := .Values.catalog.interfaces }}
{{- $interface := merge $_interface (deepCopy $.Values.catalog.defaults) }}
{{- $redis := $interface.redis }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: babylon-catalog-redis
  namespace: {{ $namespace }}
  labels:
    {{- include "babylon.labels" $ | nindent 4 }}
    app.kubernetes.io/component: catalog-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "babylon.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: catalog-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "babylon.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: catalog-redis
    spec:
      {{- with $redis.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $redis.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: default
      {{- with $redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: babylon-catalog-redis
        image: {{ $redis.image.repository }}:{{ $redis.image.tag }}
        imagePullPolicy: {{ $redis.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        {{- with $redis.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/lib/redis/data
          name: redis-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: redis-data
{{- end }}
